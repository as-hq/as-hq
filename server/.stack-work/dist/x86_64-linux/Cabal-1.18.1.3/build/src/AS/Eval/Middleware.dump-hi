
==================== FINAL INTERFACE ====================
2015-09-01 19:51:27.330156 UTC

interface alphasheets-0.1.0.0:AS.Eval.Middleware 7083
  interface hash: 2593c3d142862aea223422c16b9f6f8e
  ABI hash: a458e6e44f1e7afa65a2040dd1c3bc6b
  export-list hash: 8383d71cb651310641b38101c7f33441
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b3e42bd95161d59a110147b096268a2e
  used TH splices: False
  where
exports:
  AS.Eval.Middleware.evalConnector
  AS.Eval.Middleware.evalInitExcel
  AS.Eval.Middleware.evalMiddleware
module dependencies: AS.Config.Paths AS.DB AS.Eval AS.Eval.Lang
                     AS.Parsing.Common AS.Parsing.In AS.Parsing.Out AS.Types AS.Util
package dependencies: BoundedChan-1.0.3.0 SHA-1.6.4.2 aeson-0.8.1.1
                      array-0.5.0.0 attoparsec-0.13.0.1 base base64-bytestring-1.0.0.1
                      binary-0.7.1.0 blaze-builder-0.4.0.1 bytestring-0.10.4.0
                      bytestring-lexing-0.5.0.2 case-insensitive-1.2.0.4 cereal-0.4.1.1
                      containers-0.5.5.1 crypto-api-0.13.2 deepseq-1.3.0.2
                      directory-1.2.2.1 dlist-0.7.1.1 entropy-0.3.7 filepath-1.3.0.2
                      ghc-prim hashable-1.2.3.3 hedis-0.6.8 integer-gmp
                      monad-control-1.0.0.4 mtl-2.2.1 network-2.6.2.1 parsec-3.1.9
                      pretty-1.1.1.1 primitive-0.5.2.1 process-1.2.3.0 pureMD5-2.1.2.1
                      pyfi-0.4.0.4 random-1.1 regex-base-0.93.2 regex-posix-0.95.2
                      resource-pool-0.2.3.2 scientific-0.3.3.8 split-0.2.2 stm-2.4.2
                      strict-0.3.2 tagged-0.8.1 template-haskell text-1.2.1.1
                      time-1.5.0.1 transformers-0.4.3.0 transformers-base-0.4.4
                      unix-2.7.1.0 unordered-containers-0.2.5.1 uuid-1.3.10
                      uuid-types-1.0.1 vector-0.10.9.1 websockets-0.9.5.0
orphans: aeson-0.8.1.1:Data.Aeson.Types.Generic
         aeson-0.8.1.1:Data.Aeson.Types.Instances
         aeson-0.8.1.1:Data.Aeson.Types.Internal
         alphasheets-0.1.0.0:AS.Eval.Lang alphasheets-0.1.0.0:AS.Parsing.In
         attoparsec-0.13.0.1:Data.Attoparsec.ByteString.Char8 base:GHC.Base
         base:GHC.Float base:GHC.Real binary-0.7.1.0:Data.Binary.Generic
         bytestring-0.10.4.0:Data.ByteString.Builder
         bytestring-lexing-0.5.0.2:Data.ByteString.Lex.Fractional
         crypto-api-0.13.2:Crypto.Classes crypto-api-0.13.2:Crypto.Random
         hashable-1.2.3.3:Data.Hashable.Generic
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         pyfi-0.4.0.4:Python random-1.1:System.Random
         regex-base-0.93.2:Text.Regex.Base.Context
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.String
         resource-pool-0.2.3.2:Data.Pool stm-2.4.2:Control.Monad.STM
         template-haskell:Language.Haskell.TH.PprLib text-1.2.1.1:Data.Text
         text-1.2.1.1:Data.Text.Lazy text-1.2.1.1:Data.Text.Show
         time-1.5.0.1:Data.Time.Calendar.Gregorian
         time-1.5.0.1:Data.Time.Format.Parse
         time-1.5.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.4.3.0:Control.Monad.Trans.Error
         vector-0.10.9.1:Data.Vector.Fusion.Stream
         vector-0.10.9.1:Data.Vector.Unboxed
family instance modules: alphasheets-0.1.0.0:AS.Types
                         attoparsec-0.13.0.1:Data.Attoparsec.Internal.Types
                         base:Control.Applicative base:Data.Either base:Data.Monoid
                         base:Data.Type.Equality base:GHC.Exts base:GHC.Generics
                         dlist-0.7.1.1:Data.DList
                         monad-control-1.0.0.4:Control.Monad.Trans.Control
                         primitive-0.5.2.1:Control.Monad.Primitive tagged-0.8.1:Data.Tagged
                         text-1.2.1.1:Data.Text text-1.2.1.1:Data.Text.Lazy
                         unordered-containers-0.2.5.1:Data.HashMap.Base
                         unordered-containers-0.2.5.1:Data.HashSet
                         uuid-types-1.0.1:Data.UUID.Types.Internal
                         uuid-types-1.0.1:Data.UUID.Types.Internal.Builder
                         vector-0.10.9.1:Data.Vector vector-0.10.9.1:Data.Vector.Primitive
                         vector-0.10.9.1:Data.Vector.Storable
                         vector-0.10.9.1:Data.Vector.Unboxed.Base
import  -/  AS.Eval 0e4f2c408eab6fbd1102727b9d5ebfb1
  exports: c2aa05e06b66a92afb25f820cb2eeeae
  evalExcel 2e9fafebc3e8af06d2ab03891ecb7bd2
import  -/  AS.Types 57177fd753daf2295937f583773f48c2
  exports: 6e42e59e48c9bd8a9ec1e6c5c6514bc2
  ASCell 8aaaba72e62199ec29d193feeafd5149
  Cell a71eaf14eaf14807100ece3dda35b9c0
  Excel 7dfe3f94744dcf76cf14bbe079f2876e
  Expression 42521d70f0656b4e3a31d49f7f4b2bca
  Volatile 3ae0d4a1ee662ad8419236ddc5e2a4d6
import  -/  AS.Util fcc8b95dc3c2bad9df28c51cf1f39293
  exports: 47ea528d752de70f9f7cc438ef23ed30
  hasVolatileTag 22fa9ba535ffdb9d03a97ab0fc03dd85
import  -/  base:Data.List 0908c8f6208710e0f918cb6f09e882cc
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  ghc-prim:GHC.Types dcba736fa3dfba12d307ab18354845d2
13a01e3fb732de240e7953f7b993eb09
  $wa :: AS.Types.ASLocation
         -> AS.Types.ASExpression
         -> AS.Types.ASValue
         -> [AS.Types.ASCellTag]
         -> GHC.Prim.State# GHC.Prim.RealWorld
         -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASCell #)
    {- Arity: 5, Strictness: <L,U><S,U><L,U><L,U><L,U>,
       Unfolding: (\ ww :: AS.Types.ASLocation
                     ww1 :: AS.Types.ASExpression
                     ww2 :: AS.Types.ASValue
                     ww3 :: [AS.Types.ASCellTag]
                     w :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case ww1 of wild {
                     AS.Types.Expression rawXp ds
                     -> case ds of wild1 {
                          DEFAULT -> (# w, AS.Types.Cell ww wild ww2 ww3 #)
                          AS.Types.Excel
                          -> case AS.Eval.evalExcel1 wild w of ds1 { (#,#) ipv ipv1 ->
                             case ipv1 of wild2 { (,) newXp isVolatile ->
                             case isVolatile of wild3 {
                               GHC.Types.False -> (# ipv, AS.Types.Cell ww newXp ww2 ww3 #)
                               GHC.Types.True
                               -> case AS.Util.containsVolatileTag ww3 of wild4 { DEFAULT ->
                                  (# ipv, AS.Types.Cell ww newXp ww2 ww3 #) } } } } }
                     AS.Types.Reference ipv ipv1
                     -> (# w, AS.Types.Cell ww wild ww2 ww3 #) }) -}
8ce87de5541084bcd69610dd94fa1375
  evalConnector :: AS.Types.ASCell -> GHC.Types.IO AS.Types.ASCell
    {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>,
       Unfolding: ((GHC.Base.returnIO1 @ AS.Types.ASCell)
                     `cast`
                   (<AS.Types.ASCell>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASCell>_R))) -}
c26bd384728f6867ccafe311cdc18bb0
  evalInitExcel :: AS.Types.ASCell -> GHC.Types.IO AS.Types.ASCell
    {- Arity: 2, Strictness: <S(LSLL),1*U(U,U,U,U)><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.Eval.Middleware.evalInitExcel1
                    `cast`
                  (<AS.Types.ASCell>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASCell>_R)) -}
c7758fbb3425b37cadec449bffdc926c
  evalInitExcel1 :: AS.Types.ASCell
                    -> GHC.Prim.State# GHC.Prim.RealWorld
                    -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASCell #)
    {- Arity: 2, Strictness: <S(LSLL),1*U(U,U,U,U)><L,U>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: AS.Types.ASCell w1 :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case w of ww { AS.Types.Cell ww1 ww2 ww3 ww4 ->
                   AS.Eval.Middleware.$wa ww1 ww2 ww3 ww4 w1 }) -}
792d46b85d1cc846fc3284952ffd2b91
  evalMiddleware :: AS.Types.ASCell -> GHC.Types.IO AS.Types.ASCell
    {- Arity: 2, Strictness: <S(LSLL),1*U(U,U,U,U)><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.Eval.Middleware.evalMiddleware1
                    `cast`
                  (<AS.Types.ASCell>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASCell>_R)) -}
4335e53dc74405ba313fad783d9cc6b5
  evalMiddleware1 :: AS.Types.ASCell
                     -> GHC.Prim.State# GHC.Prim.RealWorld
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASCell #)
    {- Arity: 2, Strictness: <S(LSLL),1*U(U,U,U,U)><L,U>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: AS.Types.ASCell w1 :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case w of ww { AS.Types.Cell ww1 ww2 ww3 ww4 ->
                   AS.Eval.Middleware.$wa ww1 ww2 ww3 ww4 w1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

