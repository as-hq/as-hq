
==================== FINAL INTERFACE ====================
2015-08-20 07:09:21.924043 UTC

interface alphasheets-0.1.0.0:AS.DB 7084
  interface hash: c34e602be09dee5ebe23cb0f6ab57aa9
  ABI hash: b12b1d3c11d94c6f9f9b9f3592040d65
  export-list hash: 3c362108996cc5146ac2250c1b1c6210
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4f035f56d17ce0febefcd4e6ea23b9f4
  used TH splices: False
  where
exports:
  AS.DB.deleteCell
  AS.DB.deleteCells
  AS.DB.getCells
  AS.DB.getDAG
  AS.DB.handleClear
  AS.DB.handleDelete
  AS.DB.handleGet
  AS.DB.handleRedo
  AS.DB.handleUndo
  AS.DB.pushCommit
  AS.DB.setCell
  AS.DB.setCells
  AS.DB.updateDAG
module dependencies: AS.Types AS.Util
package dependencies: SHA-1.6.4.2 aeson-0.8.0.2 array-0.5.0.0
                      attoparsec-0.12.1.6 base base64-bytestring-1.0.0.1 binary-0.7.1.0
                      blaze-builder-0.4.0.1 bytestring-0.10.4.0 case-insensitive-1.2.0.4
                      containers-0.5.5.1 deepseq-1.3.0.2 dlist-0.7.1.1 entropy-0.3.7
                      ghc-prim hashable-1.2.3.3 integer-gmp network-2.6.2.0
                      old-locale-1.0.0.6 primitive-0.6 random-1.1 scientific-0.3.3.8
                      text-1.2.0.6 time-1.4.2 transformers-0.3.0.0 unix-2.7.0.1
                      unordered-containers-0.2.5.1 vector-0.10.12.3 websockets-0.9.5.0
orphans: aeson-0.8.0.2:Data.Aeson.Types.Generic
         aeson-0.8.0.2:Data.Aeson.Types.Instances
         aeson-0.8.0.2:Data.Aeson.Types.Internal
         attoparsec-0.12.1.6:Data.Attoparsec.ByteString.Char8 base:GHC.Base
         base:GHC.Float base:GHC.Real binary-0.7.1.0:Data.Binary.Generic
         bytestring-0.10.4.0:Data.ByteString.Builder
         hashable-1.2.3.3:Data.Hashable.Generic
         network-2.6.2.0:Network.Socket network-2.6.2.0:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
         vector-0.10.12.3:Data.Vector.Fusion.Stream
         vector-0.10.12.3:Data.Vector.Unboxed
family instance modules: alphasheets-0.1.0.0:AS.Types
                         attoparsec-0.12.1.6:Data.Attoparsec.Internal.Types
                         base:Control.Applicative base:Data.Either base:Data.Monoid
                         base:Data.Type.Equality base:GHC.Exts base:GHC.Generics
                         dlist-0.7.1.1:Data.DList primitive-0.6:Control.Monad.Primitive
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
                         unordered-containers-0.2.5.1:Data.HashMap.Base
                         unordered-containers-0.2.5.1:Data.HashSet
                         vector-0.10.12.3:Data.Vector vector-0.10.12.3:Data.Vector.Primitive
                         vector-0.10.12.3:Data.Vector.Storable
                         vector-0.10.12.3:Data.Vector.Unboxed
                         vector-0.10.12.3:Data.Vector.Unboxed.Base
import  -/  AS.Types b606c3629b6c721cf8b97ba4ece45fb1
  exports: 66ecab93115eea25472e439473866aa8
  ASCell 9694dcec8d390971f2871a63000a945c
  ASCommit 2f996db10e223119c33aefbe00e3726e
  ASLocation c3999fef437ba89bfafc0ba56adaa4e1
  ASMessage bc6381c35bc5db39b62b2fcf1105f390
  ASPayload ef78e7e924cf74e65dbb749bb938f8a1
  Clear c83bc1007f2a1640ade19e4e09ff732a
  Delete 12d7e10993c5b8162e334fd8fcc0f072
  Get d4b930f820281833e2b245709da42a42
  Message 167f18e274772af17812eb5044da6b4b
  PayloadCL 63ddeb76792f8697c6f7349b31e702d1
  PayloadLL 964d26143a041f16892f7cc71caacece
  PayloadN 524ff0a9cd5653a48dd955220943e5d9
  Redo 31e7e0c085757c711586dc2fd613f719
  Success bf076a46521f6676f19edad3fd5ee1f2
  Undo 5e50f19e2c8c0d995f64ade1807ec012
  genericText 815b8fa211ac9573deada230c3cbf0d7
import  -/  AS.Util d80e7b17172dcaa38faa0d323bd0543a
  exports: 22c6c0c3cabbbc0dbbfea98994afcbca
import  -/  base:Control.Applicative 30b769206cb5c020684e1bda0d7e7dd3
import  -/  base:Control.Monad 483e787e07c2e49f1fb1c1b88665cb92
import  -/  base:Data.List 8b77870d02d66076337587b759b7ee19
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:Foreign 4a4ab6438726e3212b7b1386e2839757
import  -/  base:Foreign.C e9d936527d229fe17560cabdf706055a
import  -/  base:Foreign.C.String 8e5a6a80d9f021bcbdcb0fabb9de5be3
import  -/  base:Foreign.C.Types b5768a49c9b7fb467f5062bd92b9d867
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:System.IO.Unsafe 30ed3b3091d67d91d6c63c8cdba54fc3
import  -/  ghc-prim:GHC.Types dcba736fa3dfba12d307ab18354845d2
import  -/  text-1.2.0.6:Data.Text.Unsafe ac9f3a117bf4b926c22ce7cbd1c80ec1
import  -/  vector-0.10.12.3:Data.Vector.Storable 37bb84342141e5e4c1ed9967b315985d
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.18.1.5/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
9ea6b38b3b431607823b9fbcd48ac312
  deleteCell :: AS.Types.ASLocation -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.deleteCell1
                    `cast`
                  (<AS.Types.ASLocation>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
fc1bbd524a21a188288abf6ee07d02a1
  deleteCell1 :: AS.Types.ASLocation
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ loc :: AS.Types.ASLocation
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
77fff85e82142e8cfeabb2e217b9ecea
  deleteCells :: [AS.Types.ASLocation] -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.deleteCells1
                    `cast`
                  (<[AS.Types.ASLocation]>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
0dca5a53f20d03af04d88fb879514db3
  deleteCells1 :: [AS.Types.ASLocation]
                  -> GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ locs :: [AS.Types.ASLocation]
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
6ba3301401d23f17f8f7c1d851d4834f
  getCells :: [AS.Types.ASLocation] -> GHC.Types.IO [AS.Types.ASCell]
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.getCells1
                    `cast`
                  (<[AS.Types.ASLocation]>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <[AS.Types.ASCell]>_R)) -}
74345f70e31a9340234705c1602f3560
  getCells1 :: [AS.Types.ASLocation]
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, [AS.Types.ASCell] #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ locs :: [AS.Types.ASLocation]
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Types.[] @ AS.Types.ASCell #)) -}
143855947bb9e585222d918122997131
  getDAG :: GHC.Types.IO [(AS.Types.ASLocation, AS.Types.ASLocation)]
    {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
       Unfolding: (AS.DB.getDAG1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0]
                             <[(AS.Types.ASLocation, AS.Types.ASLocation)]>_R))) -}
a36394b4989c2bb0311b0137a5f387dc
  getDAG1 :: GHC.Prim.State# GHC.Prim.RealWorld
             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                   [(AS.Types.ASLocation, AS.Types.ASLocation)] #)
    {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
       Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta,
                      GHC.Types.[] @ (AS.Types.ASLocation, AS.Types.ASLocation) #)) -}
472552f5b6950a1243c625f9bb869d87
  handleClear :: GHC.Types.IO AS.Types.ASMessage
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (AS.DB.handleClear1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R))) -}
5cff4209810491eaa76a115da5e0d65c
  handleClear1 :: GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# s, AS.DB.handleClear2 #)) -}
e09889658dbff6ff0ace426ebd665208
  handleClear2 :: AS.Types.ASMessage
    {- Unfolding: (AS.Types.Message
                     Data.Text.Internal.empty_
                     AS.Types.Clear
                     AS.Types.Success
                     AS.DB.handleClear3) -}
82c4e5eb8fc041c7ee1723c809594591
  handleClear3 :: AS.Types.ASPayload
    {- HasNoCafRefs, Unfolding: (AS.Types.PayloadN GHC.Tuple.()) -}
fd27dbcb0812b8852dd29c33a122f44e
  handleDelete :: AS.Types.ASPayload
                  -> GHC.Types.IO AS.Types.ASMessage
    {- Arity: 2, Strictness: <S,1*U><L,U>,
       Unfolding: (AS.DB.handleDelete1
                     `cast`
                   (<AS.Types.ASPayload>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R))) -}
81e9341870cf27733714e338c990b207
  handleDelete1 :: AS.Types.ASPayload
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 2, Strictness: <S,1*U><L,U>,
       Unfolding: (\ p :: AS.Types.ASPayload
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case p of wild {
                     DEFAULT
                     -> case AS.DB.handleDelete2
                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
                        of {}
                     AS.Types.PayloadLL locs
                     -> (# eta,
                           AS.Types.Message
                             Data.Text.Internal.empty_
                             AS.Types.Delete
                             AS.Types.Success
                             wild #) }) -}
692a264d82af8c6e94b66be79dc46b02
  handleDelete2 :: GHC.Types.IO AS.Types.ASMessage
    {- Strictness: b -}
8c816c0edff2a155d7efe39ad82f49dc
  handleGet :: AS.Types.ASPayload -> GHC.Types.IO AS.Types.ASMessage
    {- Arity: 2, Strictness: <S,1*U><L,U>,
       Unfolding: (AS.DB.handleGet1
                     `cast`
                   (<AS.Types.ASPayload>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R))) -}
99fd34a2c521612398409bb6847912c2
  handleGet1 :: AS.Types.ASPayload
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 2, Strictness: <S,1*U><L,U>,
       Unfolding: (\ ds :: AS.Types.ASPayload
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case ds of wild {
                     DEFAULT
                     -> case AS.DB.handleGet4
                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
                        of {}
                     AS.Types.PayloadLL locs -> (# eta, AS.DB.handleGet2 #) }) -}
0f742f48975817c59cb738a12478374b
  handleGet2 :: AS.Types.ASMessage
    {- Unfolding: (AS.Types.Message
                     Data.Text.Internal.empty_
                     AS.Types.Get
                     AS.Types.Success
                     AS.DB.handleGet3) -}
238fe2aed20761d74ba7fff8ad19cfeb
  handleGet3 :: AS.Types.ASPayload
    {- HasNoCafRefs,
       Unfolding: (AS.Types.PayloadCL (GHC.Types.[] @ AS.Types.ASCell)) -}
61a237e5543e71602b9b2aa34d1e0825
  handleGet4 :: GHC.Types.IO AS.Types.ASMessage {- Strictness: b -}
56376f5cf164765269f256cf9842b6a8
  handleRedo :: GHC.Types.IO AS.Types.ASMessage
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (AS.DB.handleRedo1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R))) -}
d084a17846ab059d0d0eb086a01ad4ef
  handleRedo1 :: GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# s, AS.DB.handleRedo2 #)) -}
5f41fa7c48ff37f016990493a7627a5e
  handleRedo2 :: AS.Types.ASMessage
    {- Unfolding: (AS.Types.Message
                     Data.Text.Internal.empty_
                     AS.Types.Redo
                     AS.Types.Success
                     AS.DB.handleClear3) -}
270ef51135914aefb07e972bfdeb8c45
  handleUndo :: GHC.Types.IO AS.Types.ASMessage
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (AS.DB.handleUndo1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R))) -}
73cfc5074ac11031ce806cf17bfcca47
  handleUndo1 :: GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# s, AS.DB.handleUndo2 #)) -}
1776ba5d4a21de0bef5c6531206fbc99
  handleUndo2 :: AS.Types.ASMessage
    {- Unfolding: (AS.Types.Message
                     Data.Text.Internal.empty_
                     AS.Types.Undo
                     AS.Types.Success
                     AS.DB.handleClear3) -}
4a8fd67b760f0952a64bf5ddb6a7a74f
  pushCommit :: AS.Types.ASCommit -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.pushCommit1
                    `cast`
                  (<AS.Types.ASCommit>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1a3c4f639eb1c0ecfb33743f98982b88
  pushCommit1 :: AS.Types.ASCommit
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ commit :: AS.Types.ASCommit
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
5d4f6e7866838271bf4fcc8a44f7bf89
  setCell :: AS.Types.ASCell -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.setCell1
                    `cast`
                  (<AS.Types.ASCell>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
ff9fadd503ff5653bf3af5b9f2b19caf
  setCell1 :: AS.Types.ASCell
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ c :: AS.Types.ASCell
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
4be32ec4c4867e594c489b509e3c624e
  setCells :: [AS.Types.ASCell] -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.setCells1
                    `cast`
                  (<[AS.Types.ASCell]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7f365b59924ea0119dfae91153447794
  setCells1 :: [AS.Types.ASCell]
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ cells :: [AS.Types.ASCell]
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
1518bd50213189e8ca751d29ffcbed1b
  updateDAG :: [([AS.Types.ASLocation], AS.Types.ASLocation)]
               -> GHC.Types.IO ()
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.DB.updateDAG1
                    `cast`
                  (<[([AS.Types.ASLocation], AS.Types.ASLocation)]>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
7cee01b69e851be51a788cd492376079
  updateDAG1 :: [([AS.Types.ASLocation], AS.Types.ASLocation)]
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>,
       Unfolding: InlineRule (2, True, True)
                  (\ update :: [([AS.Types.ASLocation], AS.Types.ASLocation)]
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   (# eta, GHC.Tuple.() #)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

