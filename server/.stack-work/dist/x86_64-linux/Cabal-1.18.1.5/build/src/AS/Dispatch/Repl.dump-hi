
==================== FINAL INTERFACE ====================
2015-09-24 03:16:35.710682 UTC

interface alphasheets-0.1.0.0:AS.Dispatch.Repl 7084
  interface hash: 8c8e556d90bca8286b81d843207576d2
  ABI hash: 2743c858e6878621de60e31546456340
  export-list hash: b0ab7c62ba7eb78ca2d447fc618e5ff8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1cb6a063e15d848b08cbd86d75583f42
  used TH splices: False
  where
exports:
  AS.Dispatch.Repl.runReplDispatch
module dependencies: AS.Config.Paths AS.Config.Settings
                     AS.Eval.Core AS.Eval.Lang AS.Parsing.Common AS.Parsing.Eval
                     AS.Parsing.In AS.Parsing.Out AS.Types AS.Util
package dependencies: BoundedChan-1.0.3.0 SHA-1.6.4.2 aeson-0.8.1.1
                      array-0.5.0.0 attoparsec-0.13.0.1 base base64-bytestring-1.0.0.1
                      binary-0.7.1.0 blaze-builder-0.4.0.1 bytestring-0.10.4.0
                      bytestring-lexing-0.5.0.2 case-insensitive-1.2.0.4 cereal-0.4.1.1
                      containers-0.5.5.1 crypto-api-0.13.2 deepseq-1.3.0.2
                      directory-1.2.2.1 dlist-0.7.1.1 entropy-0.3.7 filepath-1.3.0.2
                      ghc-prim hashable-1.2.3.3 hedis-0.6.9 integer-gmp
                      monad-control-1.0.0.4 mtl-2.2.1 network-2.6.2.1 parsec-3.1.9
                      pretty-1.1.1.1 primitive-0.6 process-1.2.3.0 pureMD5-2.1.2.1
                      pyfi-0.4.0.4 random-1.1 regex-base-0.93.2 regex-posix-0.95.2
                      resource-pool-0.2.3.2 scientific-0.3.3.8 split-0.2.2 stm-2.4.4
                      strict-0.3.2 tagged-0.8.1 template-haskell text-1.2.1.1
                      time-1.5.0.1 transformers-0.4.3.0 transformers-base-0.4.4
                      unix-2.7.1.0 unordered-containers-0.2.5.1 uuid-1.3.10
                      uuid-types-1.0.1 vector-0.11.0.0 websockets-0.9.5.0
orphans: aeson-0.8.1.1:Data.Aeson.Types.Generic
         aeson-0.8.1.1:Data.Aeson.Types.Instances
         aeson-0.8.1.1:Data.Aeson.Types.Internal
         alphasheets-0.1.0.0:AS.Eval.Lang alphasheets-0.1.0.0:AS.Parsing.In
         attoparsec-0.13.0.1:Data.Attoparsec.ByteString.Char8 base:GHC.Base
         base:GHC.Float base:GHC.Real binary-0.7.1.0:Data.Binary.Generic
         bytestring-0.10.4.0:Data.ByteString.Builder
         bytestring-lexing-0.5.0.2:Data.ByteString.Lex.Fractional
         crypto-api-0.13.2:Crypto.Classes crypto-api-0.13.2:Crypto.Random
         hashable-1.2.3.3:Data.Hashable.Generic
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         pyfi-0.4.0.4:Python random-1.1:System.Random
         regex-base-0.93.2:Text.Regex.Base.Context
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.String
         resource-pool-0.2.3.2:Data.Pool stm-2.4.4:Control.Monad.STM
         template-haskell:Language.Haskell.TH.PprLib text-1.2.1.1:Data.Text
         text-1.2.1.1:Data.Text.Lazy text-1.2.1.1:Data.Text.Show
         time-1.5.0.1:Data.Time.Calendar.Gregorian
         time-1.5.0.1:Data.Time.Format.Parse
         time-1.5.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.4.3.0:Control.Monad.Trans.Error
         vector-0.11.0.0:Data.Vector.Fusion.Bundle
         vector-0.11.0.0:Data.Vector.Unboxed
family instance modules: alphasheets-0.1.0.0:AS.Types
                         attoparsec-0.13.0.1:Data.Attoparsec.Internal.Types
                         base:Control.Applicative base:Data.Either base:Data.Monoid
                         base:Data.Type.Equality base:GHC.Exts base:GHC.Generics
                         dlist-0.7.1.1:Data.DList
                         monad-control-1.0.0.4:Control.Monad.Trans.Control
                         primitive-0.6:Control.Monad.Primitive tagged-0.8.1:Data.Tagged
                         text-1.2.1.1:Data.Text text-1.2.1.1:Data.Text.Lazy
                         unordered-containers-0.2.5.1:Data.HashMap.Base
                         unordered-containers-0.2.5.1:Data.HashSet
                         uuid-types-1.0.1:Data.UUID.Types.Internal
                         uuid-types-1.0.1:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0:Data.Vector vector-0.11.0.0:Data.Vector.Primitive
                         vector-0.11.0.0:Data.Vector.Storable
                         vector-0.11.0.0:Data.Vector.Unboxed
                         vector-0.11.0.0:Data.Vector.Unboxed.Base
import  -/  AS.Eval.Core 0a0d946149f3ecace6e4fde0a14640e4
  exports: a8fd7d5e67e40ad69836b4f35807868b
  evalCodeRepl e774f8bb552f1ac4eac6ae71e33d0655
import  -/  AS.Types e3666650dafeff86b49d80330a77be8c
  exports: f8584b3856684401ece78f5d630831a9
  ASMessage b488c6e303af3ec316847aa09e9ef416
  ASUser 8f65613dded3aab26fae493435f0f314
  LangValue ccc9805813e6283b108937cf8e5439cd
  Message 84f4a46e37fa757190dd82d855281e02
  PayloadLangValue edd6a875dd0fd90e53f476b1ff264759
  PayloadXp f5cc235443f8965f070ed41b12aa6c40
  ServerState 9ce35b4af6c18edb38f6401544fc8edb
  Success caf3e41f68e7099b0d98b6a27765d4ec
  language 96d4cc4ee6772e20c09c6cc6a5feae9a
import  -/  base:Control.Concurrent 1be25cd1e2ac314074fafb26df0ff06b
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:GHC.MVar 2c9d76ed3707c435c49b694504d09491
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  ghc-prim:GHC.Types dcba736fa3dfba12d307ab18354845d2
5239828baf1f9dc41e208e9e73a94cd0
  runReplDispatch :: AS.Types.ASUser
                     -> GHC.MVar.MVar AS.Types.ServerState
                     -> AS.Types.ASMessage
                     -> GHC.Types.IO AS.Types.ASMessage
    {- Arity: 4, Strictness: <L,A><L,A><S(LLLS),1*U(U,U,A,1*U)><L,U>,
       Unfolding: InlineRule (0, True, True)
                  AS.Dispatch.Repl.runReplDispatch1
                    `cast`
                  (<AS.Types.ASUser>_R
                   ->_R <GHC.MVar.MVar AS.Types.ServerState>_R
                   ->_R <AS.Types.ASMessage>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <AS.Types.ASMessage>_R)) -}
29cb0d88fffa3159c632c929fd0cb897
  runReplDispatch1 :: AS.Types.ASUser
                      -> GHC.MVar.MVar AS.Types.ServerState
                      -> AS.Types.ASMessage
                      -> GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
    {- Arity: 4, Strictness: <L,A><L,A><S(LLLS),1*U(U,U,A,1*U)><L,U>,
       Unfolding: InlineRule (4, True, False)
                  (\ user :: AS.Types.ASUser
                     state :: GHC.MVar.MVar AS.Types.ServerState
                     ds :: AS.Types.ASMessage
                     eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case ds of wild { AS.Types.Message uid action ds1 ds2 ->
                   case ds2 of wild1 {
                     DEFAULT
                     -> case AS.Dispatch.Repl.runReplDispatch2
                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, AS.Types.ASMessage #)
                        of {}
                     AS.Types.PayloadXp xp
                     -> case AS.Eval.Core.evalCodeRepl1
                               xp
                               eta of ds3 { (#,#) ipv ipv1 ->
                        (# ipv,
                           AS.Types.Message
                             uid
                             action
                             AS.Types.Success
                             (AS.Types.PayloadLangValue
                                (AS.Types.LangValue
                                   ipv1
                                   (case xp of wild2 {
                                      AS.Types.Expression ds4 ds5 -> ds5
                                      AS.Types.Reference ipv3 ipv4
                                      -> AS.Types.language1 }))) #) } } }) -}
28a4f831867de6e9c3d7ba8a9d8ee3d5
  runReplDispatch2 :: GHC.Types.IO AS.Types.ASMessage
    {- Strictness: b -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

