-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Call python inline from haskell
--   
--   PYthon Function Interface: Wrap python functions with haskell.
@package pyfi
@version 0.4.0.4

module Str
str :: QuasiQuoter

module Python
defO :: String -> IO (PyObject b)
defV :: FromJSON b => String -> IO b
defOO :: String -> (PyObject a1) -> IO (PyObject b)
defOV :: FromJSON b => String -> (PyObject a1) -> IO b
defVO :: ToJSON a1 => String -> a1 -> IO (PyObject b)
defVV :: (ToJSON a1, FromJSON b) => String -> a1 -> IO b
defOOO :: String -> (PyObject a1) -> (PyObject a2) -> IO (PyObject b)
defOOV :: FromJSON b => String -> (PyObject a1) -> (PyObject a2) -> IO b
defOVO :: ToJSON a2 => String -> (PyObject a1) -> a2 -> IO (PyObject b)
defOVV :: (ToJSON a2, FromJSON b) => String -> (PyObject a1) -> a2 -> IO b
defVOO :: ToJSON a1 => String -> a1 -> (PyObject a2) -> IO (PyObject b)
defVOV :: (ToJSON a1, FromJSON b) => String -> a1 -> (PyObject a2) -> IO b
defVVO :: (ToJSON a1, ToJSON a2) => String -> a1 -> a2 -> IO (PyObject b)
defVVV :: (ToJSON a1, ToJSON a2, FromJSON b) => String -> a1 -> a2 -> IO b
defOOOO :: String -> (PyObject a1) -> (PyObject a2) -> (PyObject a3) -> IO (PyObject b)
defOOOV :: FromJSON b => String -> (PyObject a1) -> (PyObject a2) -> (PyObject a3) -> IO b
defOOVO :: ToJSON a3 => String -> (PyObject a1) -> (PyObject a2) -> a3 -> IO (PyObject b)
defOOVV :: (ToJSON a3, FromJSON b) => String -> (PyObject a1) -> (PyObject a2) -> a3 -> IO b
defOVOO :: ToJSON a2 => String -> (PyObject a1) -> a2 -> (PyObject a3) -> IO (PyObject b)
defOVOV :: (ToJSON a2, FromJSON b) => String -> (PyObject a1) -> a2 -> (PyObject a3) -> IO b
defOVVO :: (ToJSON a2, ToJSON a3) => String -> (PyObject a1) -> a2 -> a3 -> IO (PyObject b)
defOVVV :: (ToJSON a2, ToJSON a3, FromJSON b) => String -> (PyObject a1) -> a2 -> a3 -> IO b
defVOOO :: ToJSON a1 => String -> a1 -> (PyObject a2) -> (PyObject a3) -> IO (PyObject b)
defVOOV :: (ToJSON a1, FromJSON b) => String -> a1 -> (PyObject a2) -> (PyObject a3) -> IO b
defVOVO :: (ToJSON a1, ToJSON a3) => String -> a1 -> (PyObject a2) -> a3 -> IO (PyObject b)
defVOVV :: (ToJSON a1, ToJSON a3, FromJSON b) => String -> a1 -> (PyObject a2) -> a3 -> IO b
defVVOO :: (ToJSON a1, ToJSON a2) => String -> a1 -> a2 -> (PyObject a3) -> IO (PyObject b)
defVVOV :: (ToJSON a1, ToJSON a2, FromJSON b) => String -> a1 -> a2 -> (PyObject a3) -> IO b
defVVVO :: (ToJSON a1, ToJSON a2, ToJSON a3) => String -> a1 -> a2 -> a3 -> IO (PyObject b)
defVVVV :: (ToJSON a1, ToJSON a2, ToJSON a3, FromJSON b) => String -> a1 -> a2 -> a3 -> IO b
data PyObject a
data PythonException
exceptionType :: PythonException -> String
instance Typeable PythonException
instance Show (PyObject a)
instance Exception PythonException
instance Show PythonException
