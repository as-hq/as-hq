from numpy import corrcoef, std, array, shape
# given historical price data for stocks (one stock per column)
# compute the betas for each pair of stocks
# useful for hedging in the market-making business; reduce variance/risk

#takes in a list of lists
def beta(stockData):
    numStocks = shape(array(stockData))[1]
    betaMatrix = corrcoef(stockData) #numStocks x numStocks matrix
    stdevs = std(stockData,axis=0,ddof=1) #sample std for each stock
    for i in range(numStocks):
        for j in range(numStocks): 
            betaMatrix[i][j]*= stdevs[i]/stdevs[j]
    return betaMatrix.tolist() 

# in excel, need to do:
# =CORREL(OFFSET($B$3:$B$50,,ROWS($1:2)-1),OFFSET($B$3:$B$50,,COLUMNS($A:C)-1))
# and copy/drag this formula over the correct range of cells
# unreadable, annoying, and unnecessary
'''
Data: use adj close, adjusted for dividends/splits; last 20 days
yhoo
44.66
44.45
45.78
45.73
45.53
44.77
45.18
45.63
45.17
43.61
43.67
44.15
44.13
msft
42.91
41.62
42.16
42.26
41.65
41.76
41.72
41.48
41.42
41.53
41.55
40.29
40.72
goog
535.38
524.04999
533.79999
532.53003
530.39001
539.16998
540.01001
540.78003
541.60999
537.02002
536.76501
535.53003
542.56
fb
83.09
80.78
82.31
82.71
83.52
83.01
82.04
82.17
82.28
82.32
82.44
81.56
81.67
spy
209.85001
207.95
210.37
210.42999
209.49001
209.09
210.03999
208.89999
207.98
207.28
207.83
206.44
205.7

'''
